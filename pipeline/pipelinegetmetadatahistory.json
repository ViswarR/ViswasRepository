{
	"name": "pipelinegetmetadatahistory",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "getmetadatainputhistory",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Metadata2",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "getemetadatadynamichistory",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"itemName",
									"itemType"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": "*",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "getemetadatadynamichistory",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "outputhistory",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": "*",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "getemetadatadynamichistory",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "historyoutput",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete1",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy data2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "getemetadatadynamichistory",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "ls_azuredatalake",
										"type": "LinkedServiceReference"
									}
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Delete2",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Delete1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "inputhistory",
									"type": "DatasetReference"
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "ls_azuredatalake",
										"type": "LinkedServiceReference"
									},
									"path": "logs"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeEnd": {
										"value": "@adddays(utcnow(),-7)",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Metadata2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "set",
								"value": {
									"value": "@activity('Get Metadata2').output.itemName",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@not(equals(item().name,'History'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": "*",
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "getmetadatainputhistory",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 15
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://mail.google.com/mail/u/0/#inbox",
					"method": "POST",
					"body": "If Success, pipeline is success\nIf Failed, pipeline is failed",
					"authentication": {
						"type": "Basic",
						"username": "Viswas Reniguntla",
						"password": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			}
		],
		"variables": {
			"set": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-02-03T06:00:04Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}